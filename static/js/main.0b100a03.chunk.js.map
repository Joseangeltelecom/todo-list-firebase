{"version":3,"sources":["firebase/firebase-config.js","Todo.js","Login.js","App.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseAppConfig","Error","getFirebaseConfig","db","initializeApp","getFirestore","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","left","top","transform","Todo","props","classes","useState","open","setOpen","input","setInput","Modal","onClose","e","className","placeholder","todo","value","onChange","target","Button","disabled","type","onClick","setDoc","doc","id","merge","List","style","display","justifyContent","alignItems","paddingRight","ListItem","borderRadius","ListItemText","primary","secondary","color","cursor","deleteDoc","LogIn","email","setEmail","password","emailError","passwordError","setPassword","handleSignIn","handleSignUp","hasAccount","setHasAccount","autoFocus","required","App","todos","setTodos","user","setUser","setEmailError","setPasswordError","auth","getAuth","clearError","authListener","onAuthStateChanged","uid","useEffect","recentMessagesQuery","query","collection","orderBy","onSnapshot","snapshot","docs","map","data","getItems","signOut","console","log","flexDirection","paddingTop","FormControl","InputLabel","Input","preventDefault","addDoc","timestamp","serverTimestamp","Login","signInWithEmailAndPassword","then","userCredential","catch","error","code","message","createUserWithEmailAndPassword","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b100a03.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\n// import { initializeApp } from \"firebase/app\"\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\nimport { initializeApp } from \"firebase/app\"\r\nimport { getFirestore } from \"firebase/firestore\"\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD2Lt31-yW12rozFzEnzmijnWsIkHwugjc\",\r\n  authDomain: \"react-firebase9.firebaseapp.com\",\r\n  projectId: \"react-firebase9\",\r\n  storageBucket: \"react-firebase9.appspot.com\",\r\n  messagingSenderId: \"289718155800\",\r\n  appId: \"1:289718155800:web:7f051bd60427b30273216d\",\r\n}\r\n\r\nexport function getFirebaseConfig() {\r\n  if (!firebaseConfig || !firebaseConfig.apiKey) {\r\n    throw new Error(\r\n      \"No Firebase configuration object provided.\" +\r\n        \"\\n\" +\r\n        \"Add your web app's configuration object to firebase-config.js\"\r\n    )\r\n  } else {\r\n    return firebaseConfig\r\n  }\r\n}\r\n\r\n// Initialize Firebase\r\n// const app = initializeApp(firebaseConfig)\r\n\r\nconst firebaseAppConfig = getFirebaseConfig()\r\nconst app = initializeApp(firebaseAppConfig)\r\nexport const db = getFirestore()\r\nexport default app","import { deleteDoc, doc, setDoc } from \"@firebase/firestore\"\r\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\"\r\nimport EditIcon from \"@mui/icons-material/Edit\"\r\nimport { List, ListItem, ListItemText, Modal, Button } from \"@mui/material\"\r\nimport React, { useState } from \"react\"\r\nimport { db } from \"./firebase/firebase-config\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    left: \"50%\",\r\n    top: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n}))\r\n\r\nfunction Todo(props) {\r\n  const classes = useStyles()\r\n  const [open, setOpen] = useState(false)\r\n  const [input, setInput] = useState()\r\n\r\n  const updateTodo = () => {\r\n    setDoc(doc(db, \"todos\", props.todo.id), { todo: input }, { merge: true })\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal open={open} onClose={(e) => setOpen(false)}>\r\n        <div className={classes.paper}>\r\n          <form>\r\n            <input\r\n              placeholder={props.todo.todo}\r\n              value={input}\r\n              onChange={(e) => setInput(e.target.value)}\r\n            />\r\n            <Button disabled={!input} type=\"submit\" onClick={updateTodo}>\r\n              update todo\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n\r\n      <List\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          paddingRight: \"40px\"\r\n        }}\r\n      >\r\n        <ListItem\r\n          style={{\r\n            background: \"linear-gradient(315deg, #182b3a 0%, #20a4f3 74%)\",\r\n            borderRadius: \"5px\",\r\n            width: \"500px\",\r\n          }}\r\n        >\r\n          <ListItemText primary=\"Todo\" secondary={props.todo.todo} />\r\n          <EditIcon\r\n            style={{ color: \"blue\", cursor: \"pointer\" }}\r\n            onClick={(e) => setOpen(true)}\r\n          />\r\n          <DeleteForeverIcon\r\n            style={{ color: \"red\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              deleteDoc(doc(db, \"todos\", props.todo.id))\r\n            }}\r\n          />\r\n        </ListItem>\r\n      </List>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Todo\r\n","import \"./App.css\"\r\n\r\nconst LogIn = ({\r\n  email,\r\n  setEmail,\r\n  password,\r\n  emailError,\r\n  passwordError,\r\n  setPassword,\r\n  handleSignIn,\r\n  handleSignUp,\r\n  hasAccount,\r\n  setHasAccount,\r\n}) => {\r\n  return (\r\n    <section className=\"login\">\r\n      <div className=\"loginContainer\">\r\n        <label>Username</label>\r\n        <input\r\n          type=\"text\"   \r\n          autoFocus\r\n          required\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <p className=\"errorMsg\">{emailError}</p>\r\n        <label>Password</label>\r\n        <input\r\n          type=\"text\"\r\n          autoFocus\r\n          required\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <p className=\"errorMsg\">{passwordError}</p>\r\n\r\n        <div className=\"btnContainer\">\r\n          {hasAccount ? (\r\n            <>\r\n              <button onClick={handleSignIn}>Sign in</button>\r\n              <p>\r\n                Don't have an account ?\r\n                <span onClick={() => setHasAccount(!hasAccount)}>Sign up</span>\r\n              </p>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <button onClick={handleSignUp}>Sign up</button>\r\n              <p>\r\n                Have an account ?\r\n                <span onClick={() => setHasAccount(!hasAccount)}>Sign in</span>\r\n              </p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default LogIn\r\n","import React from \"react\"\nimport \"./App.css\"\nimport { useState, useEffect } from \"react\"\nimport { Button, FormControl, InputLabel, Input } from \"@mui/material\"\nimport Todo from \"./Todo\"\nimport { db } from \"./firebase/firebase-config\"\nimport Login from \"./Login\"\nimport Hero from \"./Hero\"\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  GoogleAuthProvider,\n  signInWithPopup,\n  signOut,\n  onAuthStateChanged,\n} from \"firebase/auth\"\n\nimport {\n  collection,\n  addDoc,\n  query,\n  onSnapshot,\n  serverTimestamp,\n  orderBy,\n} from \"firebase/firestore\"\n\nfunction App() {\n  const [todos, setTodos] = useState([\"\"]) // short-time memory the state. Use state is going to set up that short-time memory.\n  const [input, setInput] = useState(\"\")\n  const [user, setUser] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [emailError, setEmailError] = useState(\"\")\n  const [passwordError, setPasswordError] = useState(\"\")\n  const [hasAccount, setHasAccount] = useState(false)\n\n  const auth = getAuth()\n\n  const clearInputs = () => {\n    setEmail(\"\")\n    setPassword(\"\")\n  }\n\n  const clearError = () => {\n    setEmailError(\"\")\n    setPasswordError(\"\")\n  }\n\n  // create new account:\n  const handleSignUp = () => {\n    clearError()\n    createUserWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Signed in\n        const user = userCredential.user\n        // ...\n      })\n      .catch((error) => {\n        switch (error.code) {\n          case \"auth/email-already-in-use\":\n          case \"auth/invalid-email\":\n            setEmailError(error.message)\n            break\n          case \"auth/weak-password\":\n            setPasswordError(error.message)\n            break\n        }\n      })\n  }\n\n  // Log in existing account:\n  const handleSignIn = () => {\n    clearError()\n    signInWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Signed in\n        const user = userCredential.user\n        // ...\n      })\n      .catch((error) => {\n        switch (error.code) {\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            setEmailError(error.message)\n            break\n          case \"auth/wrong-password\":\n            setPasswordError(error.message)\n            break\n        }\n      })\n  }\n\n  // Log in with google:\n  async function login() {\n    try {\n      var provider = new GoogleAuthProvider()\n      await signInWithPopup(getAuth(), provider)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  // Log out:\n  function handleLogout() {\n    signOut(auth)\n    console.log(\"I'm out\")\n  }\n\n  const authListener = () => {\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        clearInputs()\n        setUser(user)\n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/firebase.User\n        const uid = user.uid\n        // ...\n      } else {\n        // User is signed out\n        setUser(\"\")\n      }\n    })\n  }\n\n  // when  the app loads, we need to  listen to the database and fectch new todos as they add/remove.\n\n  useEffect(() => {\n    authListener()\n    // this code here.. fires when the app.js loads.\n    getItems()\n  }, [])\n\n  function getItems() {\n    // Create the query to load the last 12 messages and listen for new ones.\n    const recentMessagesQuery = query(\n      collection(db, \"todos\"),\n      orderBy(\"timestamp\", \"desc\")\n    )\n    onSnapshot(recentMessagesQuery, (snapshot) => {\n      setTodos(\n        snapshot.docs.map((doc) => ({ id: doc.id, todo: doc.data().todo }))\n      )\n    })\n  }\n\n  const addTodo = (e) => {\n    e.preventDefault()\n    addDoc(collection(db, \"todos\"), {\n      todo: input,\n      timestamp: serverTimestamp(),\n    })\n    setInput(\"\")\n  }\n\n  return (\n    <div className=\"App\">\n      {user ? (\n        <>\n          <nav>\n            <h2>Welcome My React - Firebase 🔥- Todo List.</h2>\n            <button onClick={handleLogout}>Logout</button>\n          </nav>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              paddingTop: \"15px\",\n            }}\n          >\n            <form>\n              <FormControl>\n                <InputLabel>✅ Write a Todo</InputLabel>\n                <Input\n                  value={input}\n                  onChange={(e) => setInput(e.target.value)}\n                />\n              </FormControl>\n\n              <Button disabled={!input} type=\"submit\" onClick={addTodo}>\n                Add Todo\n              </Button>\n            </form>\n          </div>\n          <ul>\n            {todos.map((todo) => (\n              <Todo todo={todo} />\n            ))}\n          </ul>\n        </>\n      ) : (\n        <Login\n          email={email}\n          setEmail={setEmail}\n          password={password}\n          setPassword={setPassword}\n          handleSignIn={handleSignIn}\n          handleSignUp={handleSignUp}\n          hasAccount={hasAccount}\n          setHasAccount={setHasAccount}\n          emailError={emailError}\n          passwordError={passwordError}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}