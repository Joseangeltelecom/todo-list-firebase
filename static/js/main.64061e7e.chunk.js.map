{"version":3,"sources":["firebase/firebase-config.js","Todo.js","App.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseAppConfig","Error","getFirebaseConfig","db","initializeApp","getFirestore","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","left","top","transform","Todo","props","classes","useState","open","setOpen","input","setInput","Modal","onClose","e","className","placeholder","todo","value","onChange","target","Button","disabled","type","onClick","setDoc","doc","id","merge","List","style","display","justifyContent","alignItems","paddingRight","ListItem","borderRadius","ListItemText","primary","secondary","color","cursor","deleteDoc","App","todos","setTodos","useEffect","recentMessagesQuery","query","collection","orderBy","onSnapshot","snapshot","docs","map","data","getItems","flexDirection","paddingTop","FormControl","InputLabel","Input","preventDefault","addDoc","timestamp","serverTimestamp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64061e7e.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\n// import { initializeApp } from \"firebase/app\"\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\nimport { initializeApp } from \"firebase/app\"\r\nimport { getFirestore } from \"firebase/firestore\"\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD2Lt31-yW12rozFzEnzmijnWsIkHwugjc\",\r\n  authDomain: \"react-firebase9.firebaseapp.com\",\r\n  projectId: \"react-firebase9\",\r\n  storageBucket: \"react-firebase9.appspot.com\",\r\n  messagingSenderId: \"289718155800\",\r\n  appId: \"1:289718155800:web:7f051bd60427b30273216d\",\r\n}\r\n\r\nexport function getFirebaseConfig() {\r\n  if (!firebaseConfig || !firebaseConfig.apiKey) {\r\n    throw new Error(\r\n      \"No Firebase configuration object provided.\" +\r\n        \"\\n\" +\r\n        \"Add your web app's configuration object to firebase-config.js\"\r\n    )\r\n  } else {\r\n    return firebaseConfig\r\n  }\r\n}\r\n\r\n// Initialize Firebase\r\n// const app = initializeApp(firebaseConfig)\r\n\r\nconst firebaseAppConfig = getFirebaseConfig()\r\nconst app = initializeApp(firebaseAppConfig)\r\nexport const db = getFirestore()\r\nexport default app","import { deleteDoc, doc, setDoc } from \"@firebase/firestore\";\r\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { List, ListItem, ListItemText, Modal, Button } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { db } from \"./firebase/firebase-config\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    left: \"50%\",\r\n    top: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n}));\r\n\r\nfunction Todo(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [input, setInput] = useState();\r\n\r\n  const updateTodo = () => {\r\n    setDoc(doc(db, \"todos\", props.todo.id), { todo: input }, { merge: true });\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal open={open} onClose={(e) => setOpen(false)}>\r\n        <div className={classes.paper}>\r\n          <form>\r\n            <input\r\n              placeholder={props.todo.todo}\r\n              value={input}\r\n              onChange={(e) => setInput(e.target.value)}\r\n            />\r\n            <Button disabled={!input} type=\"submit\" onClick={updateTodo}>\r\n              update todo\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n\r\n      <List\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          paddingRight: \"40px\",\r\n        }}\r\n      >\r\n        <ListItem\r\n          style={{\r\n            background: \"linear-gradient(315deg, #182b3a 0%, #20a4f3 74%)\",\r\n            borderRadius: \"5px\",\r\n            width: \"500px\",\r\n          }}\r\n        >\r\n          <ListItemText primary=\"Todo\" secondary={props.todo.todo} />\r\n          <EditIcon\r\n            style={{ color: \"blue\", cursor: \"pointer\" }}\r\n            onClick={(e) => setOpen(true)}\r\n          />\r\n          <DeleteForeverIcon\r\n            style={{ color: \"red\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              deleteDoc(doc(db, \"todos\", props.todo.id));\r\n            }}\r\n          />\r\n        </ListItem>\r\n      </List>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Button, FormControl, InputLabel, Input } from \"@mui/material\";\r\nimport Todo from \"./Todo\";\r\nimport { db } from \"./firebase/firebase-config\";\r\n\r\nimport {\r\n  collection,\r\n  addDoc,\r\n  query,\r\n  onSnapshot,\r\n  serverTimestamp,\r\n  orderBy,\r\n} from \"firebase/firestore\";\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState([\"\"]); // short-time memory the state. Use state is going to set up that short-time memory.\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  // when  the app loads, we need to  listen to the database and fectch new todos as they add/remove.\r\n\r\n  useEffect(() => {\r\n    // this code here.. fires when the app.js loads.\r\n    getItems();\r\n  }, []);\r\n\r\n  function getItems() {\r\n    // Create the query to load the last 12 messages and listen for new ones.\r\n    const recentMessagesQuery = query(\r\n      collection(db, \"todos\"),\r\n      orderBy(\"timestamp\", \"desc\")\r\n    );\r\n    onSnapshot(recentMessagesQuery, (snapshot) => {\r\n      setTodos(\r\n        snapshot.docs.map((doc) => ({ id: doc.id, todo: doc.data().todo }))\r\n      );\r\n    });\r\n  }\r\n\r\n  const addTodo = (e) => {\r\n    e.preventDefault();\r\n    addDoc(collection(db, \"todos\"), {\r\n      todo: input,\r\n      timestamp: serverTimestamp(),\r\n    });\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <>\r\n        <nav>\r\n          <h2>Welcome My React - Firebase ðŸ”¥- Todo List.</h2>\r\n        </nav>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            paddingTop: \"15px\",\r\n          }}\r\n        >\r\n          <form>\r\n            <FormControl>\r\n              <InputLabel>âœ… Write a Todo</InputLabel>\r\n              <Input value={input} onChange={(e) => setInput(e.target.value)} />\r\n            </FormControl>\r\n\r\n            <Button disabled={!input} type=\"submit\" onClick={addTodo}>\r\n              Add Todo\r\n            </Button>\r\n          </form>\r\n        </div>\r\n        <ul>\r\n          {todos.map((todo) => (\r\n            <Todo todo={todo} />\r\n          ))}\r\n        </ul>\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\nimport App from \"./App\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}